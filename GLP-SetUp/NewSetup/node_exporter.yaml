sudo vim node_exporter_daemonset.yml

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: monitoring
  labels:
    app: node-exporter
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      hostNetwork: true
      hostPID: true
      containers:
        - name: node-exporter
          image: quay.io/prometheus/node-exporter:latest
          ports:
            - containerPort: 9100
              hostPort: 9100   # ðŸ’¡ Expose on host's private IP
              name: metrics
          resources:
            requests:
              memory: 50Mi
              cpu: 100m
            limits:
              memory: 100Mi
              cpu: 200m
          args:
            - --path.rootfs=/host
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly: true
            - name: sys
              mountPath: /host/sys
              readOnly: true
            - name: root
              mountPath: /host
              readOnly: true
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
        - name: root
          hostPath:
            path: /
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"


kubectl create namespace monitoring
kubectl apply -f node_exporter_daemonset.yml
kubectl get pods -n monitoring -l app=node-exporter -o wide


vim /etc/prometheus/prometheus.yml
  - job_name: 'aks-node-exporter'
    scrape_interval: 5s
    static_configs:
      - targets:
          - 10.0.1.4:9100
          - 10.0.1.5:9100
          - 10.0.1.6:9100

Ex:
  - job_name: 'kuberbetes-node-exporter'
    scrape_interval: 10s
    static_configs:
      - targets:
          - 10.224.0.5:9100
          - 10.224.0.4:9100


sudo systemctl restart prometheus
ADD NSG rule from VM(Prometeus) PrivateIP to AKS via '9100'.
