Mastering Grafana Loki: Complete Guide to Installation, Configuration, and Integration | Part 1: https://youtu.be/0B-yQdSXFJE?si=wzagQaq_aESjXCi-
loki documentation: https://grafana.com/docs/loki/latest/setup/install/local/
Release page documentation: https://github.com/grafana/loki/releases/
(get any release version of your preference (only prefer "loki-linux-arm64.zip")and run below commands)


sudo apt install unzip -y

curl -O -L "https://github.com/grafana/loki/releases/download/v2.9.12/loki-linux-amd64.zip" 
unzip "loki-linux-amd64.zip"

wget https://raw.githubusercontent.com/grafana/loki/main/cmd/loki/loki-local-config.yaml
(In this .yaml file you can specify the place where you want to store your logs)
(When you run this, you get a .yaml file. It has all the configuration details and you can find all the details like server, storage etc.)

Pass storage account access keys, token as env variables and container name as env variables:
export AZURE_STORAGE_CONTAINER="sample-cont"
export AZURE_STORAGE_CONTAINER="sample-cont"
export AZURE_STORAGE_CONTAINER="sample-cont"
----
loki-local-config.yaml

auth_enabled: false

server:
  http_listen_port: 3100
  grpc_listen_port: 9096
  log_level: debug
  grpc_server_max_concurrent_streams: 1000

common:
  instance_addr: 127.0.0.1
  path_prefix: /home/azureuser/loki
  storage:
    filesystem:
      chunks_directory: /home/azureuser/loki/chunks
      rules_directory: /home/azureuser/loki/rules
  replication_factor: 1
  ring:
    kvstore:
      store: inmemory

query_range:
  results_cache:
    cache:
      embedded_cache:
        enabled: true
        max_size_mb: 100

limits_config:
  ingestion_rate_strategy: global
  enforce_metric_name: false

schema_config:
  configs:
    - from: "2020-12-11"
      index:
        period: 24h
        prefix: index_
      object_store: azure
      schema: v13
      store: tsdb

storage_config:
  azure:
    account_name: ${AZURE_STORAGE_ACCOUNT_NAME}
    account_key: ${AZURE_STORAGE_ACCOUNT_KEY}
    container_name: ${AZURE_STORAGE_CONTAINER}
    use_managed_identity: false
    endpoint_suffix: blob.core.windows.net

  tsdb_shipper:
    active_index_directory: /home/azureuser/loki/index
    cache_location: /home/azureuser/loki/index_cache
    cache_ttl: 24h

  filesystem:
    directory: /home/azureuser/loki/chunks

ruler:
  alertmanager_url: http://localhost:9093


----
mkdir -p /home/azureuser/loki/{chunks,index,index_cache,rules}


AZURE_STORAGE_ACCOUNT_NAME="youraccount" \
AZURE_STORAGE_ACCOUNT_KEY="yourkey" \
AZURE_STORAGE_CONTAINER="sample-cont" \
./loki-linux-amd64 -config.file=loki-local-config.yaml -config.expand-env=true


AZURE_STORAGE_ACCOUNT_NAME="glpstorage" \
AZURE_STORAGE_ACCOUNT_KEY="*****" \
AZURE_STORAGE_CONTAINER="sample-cont" \
nohup ./loki-linux-amd64 -config.file=loki-local-config.yaml -config.expand-env=true > loki.log 2>&1 &

sudo env AZURE_STORAGE_ACCOUNT_NAME="glpstorage" \
          AZURE_STORAGE_ACCOUNT_KEY=******" \
          AZURE_STORAGE_CONTAINER="sample-cont" \
          nohup ./loki-linux-amd64 -config.file=loki-local-config.yaml -config.expand-env=true > loki.log 2>&1 &


To check if its running or not: ps aux | grep loki
To stop the process:
 Step 1: Find the Process 'ps aux | grep loki-linux-amd64'
Step 2: Kill the Process 'sudo kill <PID>'

----------------------
Installing promtail on virtual machines 
Go to release notes and search for promtail.amd version
wget https://github.com/grafana/loki/releases/download/v2.9.13/promtail-linux-amd64.zip
unzip promtail-linux-amd64.zip
wget https://raw.githubusercontent.com/grafana/loki/main/clients/cmd/promtail/promtail-local-config.yaml
(run these steps on all the servers where you want to install promtail)
----
promtail-local-config.yaml
 
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://4.227.179.203:3100/loki/api/v1/push

scrape_configs:
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          __path__: /var/log/*log
          stream: stdout

  - job_name: docker-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker
          __path__: /var/lib/docker/containers/*/*.log
          stream: stdout

----

sudo nohup ./promtail-linux-amd64 -config.file=promtail-local-config.yaml > promtail.log 2>&1 &
sudo nohup ./promtail-linux-amd64 -config.file=promtail-local-config.yaml > promtail.log 2>&1 &

ps aux | grep promtail

Go to Grafana dashboard and add data source and after adding see the content in explore...

To stop the process:
 Step 1: Find the Process 'ps aux | grep promtail-linux-amd64'
Step 2: Kill the Process 'sudo kill <PID>'
Stop the current Promtail process:
sudo pkill -f promtail-linux-amd64

NOTE:
Enable Identity in Jenkins VM and add role assignment--scope(storage)--select your storage account--give role and save
Create a container an get its SAS tokens.
------------------------------------------------
auth_enabled: false

server:
  http_listen_port: 3100
  grpc_listen_port: 9096
  log_level: debug
  grpc_server_max_concurrent_streams: 1000

common:
  instance_addr: 127.0.0.1
  path_prefix: /home/azureuser/loki
  storage:
    filesystem:
      chunks_directory: /home/azureuser/loki/chunks
      rules_directory: /home/azureuser/loki/rules
  replication_factor: 1
  ring:
    kvstore:
      store: inmemory

query_range:
  results_cache:
    cache:
      embedded_cache:
        enabled: true
        max_size_mb: 100

limits_config:
  ingestion_rate_strategy: global
  enforce_metric_name: false
  volume_enabled: true

schema_config:
  configs:
    - from: "2020-12-11"
      index:
        period: 24h
        prefix: index_
      object_store: azure
      schema: v13
      store: tsdb

ruler:
  alertmanager_url: http://localhost:9093
