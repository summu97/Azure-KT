Prerequisites:
==============================
Jenkins Installed: Ensure Jenkins is installed and running.
Azure Key Vault Plugin: Install the Azure Key Vault Plugin in Jenkins.
Azure Service Principal or Managed Identity: You need a way to authenticate Jenkins with Azure Key Vault.


Step 1: Install the Azure Key Vault Plugin
==============================
Log in to Jenkins.
Navigate to Manage Jenkins > Manage Plugins.
Go to the Available tab.
Search for Azure Key Vault.
Select the plugin and click Install without restart.
Wait for the installation to complete.


Step 2: Configure Azure Key Vault Plugin in Jenkins
==============================
Navigate to Manage Jenkins > Configure System.
Scroll down to the Azure Key Vault Plugin section.
Fill in the following details:
Key Vault URL: Enter your Azure Key Vault URL
(Example: https://myvault.vault.azure.net/)
Credential ID: Choose or add credentials to authenticate Jenkins with Key Vault.


Step 3: Add Credentials for Azure Authentication
==============================
You need to authenticate Jenkins with Azure Key Vault using either Azure Service Principal or Azure Managed Identity.

Option 1: Using Azure Service Principal
In Jenkins, go to Manage Jenkins > Manage Credentials.
Select Global Credentials (or a relevant scope).
Click Add Credentials.
Choose Microsoft Azure Service Principal as the credential type.
Enter the following details:
Subscription ID: Your Azure subscription ID.
Client ID: The Application (client) ID of your Azure Service Principal.
Client Secret: The secret associated with the Service Principal.
Tenant ID: Your Azure Active Directory tenant ID.
ID: Provide a recognizable name (e.g., azure-keyvault-credentials).
Click OK to save.

Option 2: Using Azure Managed Identity
This method works if Jenkins is running on an Azure Virtual Machine with Managed Identity enabled.

Ensure Managed Identity is enabled on your VM:
Go to the Azure Portal.
Navigate to Virtual Machines > Select your Jenkins VM.
Under Identity, enable System Assigned Managed Identity.
Assign Key Vault Reader & Key Vault Secrets User roles:
Go to Azure Key Vault in the Azure portal.
Navigate to Access Control (IAM).
Assign Key Vault Secrets User role to the Managed Identity.
In Jenkins, go to Manage Credentials.
Select Global Credentials > Add Credentials.
Choose Microsoft Azure Managed Identity as the type.
Provide an ID (e.g., azure-managed-identity).
Click OK to save.


Step 4: Test the Connection
==============================
Go back to Manage Jenkins > Configure System.
In the Azure Key Vault Plugin section, select the added credential.
Click Test Connection.
If successful, you will see a confirmation message.


Step 5: Use Azure Key Vault in Jenkins Pipelines
==============================
You can now use secrets from Azure Key Vault in Jenkins Pipeline scripts.


Example: Retrieve a Secret in a Pipeline
==============================
pipeline {
    agent any
    environment {
        MY_SECRET = credentials('my-secret-key')  // Use the Key Vault secret ID
    }
    stages {
        stage('Print Secret') {
            steps {
                script {
                    echo "Secret retrieved successfully"
                }
            }
        }
    }
}
