PREREQUESITES:
==============
Jenkins Installed: Ensure Jenkins is installed and running.
Azure Key Vault Plugin: Install the Azure Key Vault Plugin in Jenkins.
Azure Service Principal or Managed Identity: You need a way to authenticate Jenkins with Azure Key Vault.


Step 1: Install the Azure Key Vault Plugin
==========================================
Log in to Jenkins--Manage Jenkins > Manage Plugins--Available plugins--Search for 'Azure Key Vault'--Select the plugin and click Install without restart.--Wait for the installation to complete.

Step 2: Add Credentials for Azure Authentication
==============================
You need to authenticate Jenkins with Azure Key Vault using either Azure Service Principal or Azure Managed Identity.

Option 1: Using Azure Managed Identity 
Note: This method works if Jenkins is running on an Azure Virtual Machine with Managed Identity enabled.

Ensure Managed Identity is enabled on your VM:
Go to the Azure Portal--Navigate to Virtual Machines--Select your Jenkins VM--Security--Identity--enable System Assigned Managed Identity--Assign 'Key Vault Reader' & 'Key Vault Secrets User' roles.
Now go to Azure Key Vault in the Azure portal--Navigate to Access Control (IAM)--Check if your managed identity has permissions or Assign Key 'Key Vault Reader' & 'Vault Secrets User' role to the Managed Identity.
====

Option 2: Using Azure Service Principal
In Jenkins, go to Manage Jenkins > Manage Credentials.
Select Global Credentials (or a relevant scope).
Click Add Credentials.
Choose Microsoft Azure Service Principal as the credential type.
Enter the following details:
Subscription ID: Your Azure subscription ID.
Client ID: The Application (client) ID of your Azure Service Principal.
Client Secret: The secret associated with the Service Principal.
Tenant ID: Your Azure Active Directory tenant ID.
ID: Provide a recognizable name (e.g., azure-keyvault-credentials).
Click OK to save.

Step 3: Configure Azure Key Vault Plugin in Jenkins
===================================================
Navigate to Manage Jenkins--Credentials--Select Jenkins Global Credentials > Add Credentials--Choose kind: 'Azure Managed Identity'--Provide Subscription-ID--Verify Configuration(Check for "Successfully verified the Managed Identity.")--Create.

Navigate to Manage Jenkins--System--Scroll down to the 'Azure Key Vault Plugin' section--Key Vault URL: Enter your Azure Key Vault URL(Example: https://myvault.vault.azure.net/)--Credential ID: Choose Credentials ID that you added earlier--Test Connection(it will list secrets if any)--Save


Step 4: Use Azure Key Vault in Jenkins Pipelines
==============================
You can now use secrets from Azure Key Vault in Jenkins Pipeline scripts.


Example: Retrieve a Secret in a Pipeline
==============================
pipeline {
    agent any
    environment {
        MY_SECRET = credentials('your secret ID')  // You need to give secret name that you put in your keyvault
    }
    stages {
        stage('Print Secret') {
            steps {
                script {
                    echo "Secret retrieved successfully"
                }
            }
        }
    }
}
