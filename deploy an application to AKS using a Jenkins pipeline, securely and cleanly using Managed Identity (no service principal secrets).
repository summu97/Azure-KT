deploy an application to AKS using a Jenkins pipeline, securely and cleanly using Managed Identity (no service principal secrets).

🛠️ Step-by-Step Setup
✅ 1. Assign Managed Identity to Jenkins VM
On your Jenkins VM:

Go to Azure Portal → VM → Identity

Enable System Assigned Managed Identity

✅ 2. Give Jenkins VM Access to AKS
az role assignment create \
  --assignee <jenkins-vm-object-id> \
  --role "Azure Kubernetes Service Cluster Admin Role" , "Azure Kubernetes Service Cluster User Role" \
  --scope /subscriptions/<sub-id>/resourceGroups/<rg>/providers/Microsoft.ContainerService/managedClusters/<aks-name>

✅ 3. Install Azure CLI and kubectl on Jenkins Agent (if not done)
✅ 4. In Jenkins Pipeline, Authenticate Using Managed Identity(You do NOT need to set client ID / secret. Just use:)

✅ 5. Sample Jenkins Pipeline Script (Declarative)
pipeline {
  agent any

  stages {
    stage('Login to Azure') {
      steps {
        sh '''
          az login --identity
          az aks get-credentials --resource-group myRG --name myAKS --overwrite-existing
        '''
      }
    }

    stage('Deploy to AKS') {
      steps {
        sh '''
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
        '''
      }
    }
  }
}
